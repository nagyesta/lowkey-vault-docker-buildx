plugins {
    id 'java'
    id "io.toolebox.git-versioner" version "1.6.7"
}

group = 'com.github.nagyesta'
sourceCompatibility = '11'

project.ext {
    gitUser = project.hasProperty('githubUser') ? (project.property('githubUser') as String) : ''
    gitToken = project.hasProperty('githubToken') ? (project.property('githubToken') as String) : ''
    repoUrl = 'https://github.com/nagyesta/lowkey-vault-docker-buildx'
    licenseName = 'MIT License'
    licenseUrl = 'https://raw.githubusercontent.com/nagyesta/lowkey-vault-docker-buildx/main/LICENSE'
    maintainerId = 'nagyesta'
    maintainerName = 'Istvan Zoltan Nagy'
    maintainerUrl = 'https://github.com/nagyesta/'
}

versioner {
    startFrom {
        major = 0
        minor = 0
        patch = 1
    }
    match {
        major = '{major}'
        minor = '{minor}'
        patch = '{patch}'
    }
    pattern {
        //force using the version from the Lowkey Vault jar
        pattern = libs.versions.lowkeyVault.get()
    }
    git {
        authentication {
            https {
                token = project.ext.gitToken
            }
        }
    }
    tag {
        prefix = 'v'
        useCommitMessage = true
    }
}

repositories {
    mavenCentral()
}

configurations {
    lowkey
}

dependencies {
    //noinspection DependencyNotationArgument
    lowkey libs.lowkey.vault.app
}

tasks.register('copyDockerfile', Copy) {
    inputs.file("src/docker/Dockerfile")
    outputs.file("${buildDir}/docker/Dockerfile")
    from file("src/docker/Dockerfile")
    into file("${buildDir}/docker/")
    rename {
        'Dockerfile'
    }
    dependsOn(":build")
}

tasks.register('prepareDocker', Copy) {
    inputs.file(configurations.lowkey.asFileTree.singleFile)
    outputs.file("${buildDir}/docker/lowkey-vault.jar")
    from configurations.lowkey.asFileTree.singleFile
    into file("${buildDir}/docker/")
    rename {
        'lowkey-vault.jar'
    }
    dependsOn(":copyDockerfile")
}

tasks.register('createDockerBuildx', Exec) {
    workingDir "${buildDir}/docker/"

    commandLine "docker", "buildx", "create", "--use"

    standardOutput = new ByteArrayOutputStream()

    ext.output = {
        return standardOutput.toString()
    }
    dependsOn(":prepareDocker")
}

tasks.register('buildDocker', Exec) {
    inputs.dir("${buildDir}/docker/")
    workingDir "${buildDir}/docker/"

    commandLine "docker", "buildx", "build", "--platform", "linux/arm64,linux/amd64,linux/arm/v7",
            "--pull", "-t", "nagyesta/lowkey-vault:${libs.versions.lowkeyVault.get()}-jammy", "."

    standardOutput = new ByteArrayOutputStream()
    ext.output = {
        return standardOutput.toString()
    }
    dependsOn(":createDockerBuildx")
}

tasks.register('buildDockerPush', Exec) {
    inputs.dir("${buildDir}/docker/")
    workingDir "${buildDir}/docker/"

    commandLine "docker", "buildx", "build", "--platform", "linux/arm64,linux/amd64,linux/arm/v7",
            "--push", "-t", "nagyesta/lowkey-vault:${libs.versions.lowkeyVault.get()}-jammy", "."

    standardOutput = new ByteArrayOutputStream()
    ext.output = {
        return standardOutput.toString()
    }
}
